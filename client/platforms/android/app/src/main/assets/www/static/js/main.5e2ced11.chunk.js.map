{"version":3,"sources":["History.tsx","services/gql-api.ts","assets/imgs/me-2.png","assets/imgs/contact.svg","pages/home/home.tsx","pages/List/list.tsx","Routes.tsx","components/navbar.tsx","App.tsx","index.tsx"],"names":["history","LOAD_USERS","gql","GET_GENDERS","CREATE_USER","DELETE_USER","GET_USER_BY_ID","UPDATE_USER","SEARCH_USER","PAGINATION","FILTER_GENDER","Home","useState","contacts","setContacts","latest","setLatest","page","setPage","pages","useQuery","variables","first","offset","data","useEffect","pagination","users","latestlist","ListGroup","style","height","map","ListGroupItem","className","firstName","lastName","phoneNumber","id","src","me","Row","Col","sm","totalUsers","contact","Button","onClick","List","detail","setDetail","filter","setFilter","applyFilter","setApplyFilter","search","setSearch","listGender","setListGender","setId","setFirstName","setLastName","email","setEmail","gender","setGender","setPhoneNumber","getUsers","useMutation","deleteUser","updateUser","getUserById","findUser","getGenders","filterGender","openDetailContact","openFilter","searching","value","console","log","then","response","a","result","getAllUser","detailDrawerChild","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","updateFirstName","defaultValue","updateLastName","updateEmail","as","updateGender","updatePhoneNumber","window","location","reload","updateContact","marginBottom","deleteContact","filterDrawerChild","Check","label","name","index","newValue","onCancelSearch","size","res","catch","error","contactDetails","open","onRequestClose","modalElementClass","Routes","path","exact","component","home","Component","NavigationBar","add","setAdd","nav","setNav","createUser","openAddContact","addDrawerChild","onSubmit","variant","Navbar","expand","bg","fixed","Container","History","push","Fab","color","errorLink","onError","graphQLErrors","message","alert","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","startApp","ReactDOM","render","StrictMode","document","getElementById","cordova","addEventListener"],"mappings":"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","file":"static/js/main.5e2ced11.chunk.js","sourcesContent":["import { createHashHistory as history} from 'history';\n\nexport default history();","import { gql } from \"@apollo/client\";\n\nexport const LOAD_USERS = gql`\n  query {\n    getAllUser {\n      firstName\n      lastName\n      email\n      phoneNumber\n      gender\n      id\n    }\n  }\n`;\n\nexport const GET_GENDERS = gql`\n  query {\n    getGenders\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation createUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $gender: String!\n    $phoneNumber: String!\n  ) {\n    createUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      gender: $gender\n      phoneNumber: $phoneNumber\n    ) {\n      firstName\n      lastName\n      email\n      phoneNumber\n      gender\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n  mutation deleteUser($id: String!) {\n    deleteUser(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const GET_USER_BY_ID = gql`\n  mutation getUserById($id: String!) {\n    getUserById(id: $id) {\n      id\n      firstName\n      lastName\n      email\n      gender\n      phoneNumber\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser(\n    $id: String!\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $gender: String!\n    $phoneNumber: String!\n  ) {\n    updateUser(\n      id: $id\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      gender: $gender\n      phoneNumber: $phoneNumber\n    ) {\n      firstName\n      lastName\n      email\n      gender\n      phoneNumber\n    }\n  }\n`;\n\nexport const SEARCH_USER = gql`\n  mutation findUser($firstName: String) {\n    findUser(firstName: $firstName) {\n      id\n      firstName\n      lastName\n      email\n      gender\n      phoneNumber\n    }\n  }\n`;\n\nexport const PAGINATION = gql`\n  query pagination($first: Int, $offset: Int) {\n    pagination(first: $first, offset: $offset) {\n      users {\n        id\n        firstName\n        lastName\n        email\n        gender\n        phoneNumber\n      }\n      totalUsers\n    }\n  }\n`;\n\nexport const FILTER_GENDER = gql`\n  mutation filterGender($gender: String) {\n    filterGender(gender: $gender) {\n      id\n      firstName\n      lastName\n      email\n      gender\n      phoneNumber\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/me-2.ba9a76d9.png\";","export default __webpack_public_path__ + \"static/media/contact.2234706f.svg\";","import { useEffect, useState } from 'react';\nimport { PAGINATION } from '../../services/gql-api';\nimport { useQuery } from '@apollo/client';\nimport { ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nimport {FaArrowLeft,FaArrowRight} from \"react-icons/fa\"\nimport me from '../../assets/imgs/me-2.png';\nimport contact from '../../assets/imgs/contact.svg';\n\nimport './home.scss'\nimport { Row, Col } from 'react-bootstrap';\n\n\nexport default function Home() {\n    let [contacts, setContacts] = useState([]);\n    let [latest, setLatest] = useState<Array<any>>([]);\n    let [page, setPage] = useState(0);\n    let pages = useQuery(PAGINATION, {\n        variables: { first: 3, offset: page }\n    }).data;\n\n    useEffect(() => {\n        if (pages) {\n            setContacts(pages.pagination);\n            setLatest(pages.pagination.users);\n        }\n    },[pages])\n\n    function next() {\n        if (page + 3 < contacts.totalUsers) {\n            setPage(page + 3);\n\n        }\n    }\n\n\n    function prev() {\n        if (page - 3 >= 0) {\n            setPage(page - 3);\n        }\n    }\n\n    const latestlist = (\n        <div>\n            <ListGroup style={{height: \"300px\"}}>\n                {latest.map((data) => {\n                    return (\n                        <ListGroupItem className=\"listgroupitem\" key={data.id}>\n                            <p className=\"listitemtext-1\">\n                                {data.firstName + \" \" + data.lastName}\n                            </p>\n                            <p className=\"listitemtext-2\">\n                                {data.phoneNumber}\n                            </p>\n                        </ListGroupItem>\n                    )\n                })}\n            </ListGroup>\n        </div>\n    )\n\n    return (\n        <div className='home'>\n            <div className=\"header\">\n\n            </div>\n            <div className=\"body\">\n                <div className=\"container-1\">\n                    <img className=\"img-1\" src={me}></img>\n                    <div className=\"group\">\n                        <p className=\"smalltext-1\">Hello,</p>\n                        <p className=\"title-1\">Hakim Mazlan</p>\n                    </div>\n                </div>\n                <Row>\n                    <Col sm={12}>\n                        <div className=\"card-1\">\n                            <div className=\"cardleft\">\n                                <p className=\"cardtext-1\">Total Contact</p>\n                                <p className=\"cardtext-2\">{contacts.totalUsers}</p>\n                            </div>\n                            <div className=\"cardright\">\n                                <img className=\"cardimg-1\" src={contact}></img>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col sm={12}>\n                        <p className=\"subtitle-1\">Latest Contact</p>\n                        {latestlist}\n                        <div className=\"pagination-btn\">\n                            <Button className=\"btn\" onClick={prev}><FaArrowLeft/></Button>\n                            <Button className=\"btn\" onClick={next}><FaArrowRight/></Button>\n                        </div>\n                    </Col>\n                </Row>\n            </div >\n        </div >\n    )\n}\n\n\n","import { useEffect, useState } from 'react'\nimport './list.scss'\nimport { ListGroup, ListGroupItem, Form, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { LOAD_USERS, GET_USER_BY_ID, DELETE_USER, UPDATE_USER, SEARCH_USER, GET_GENDERS, FILTER_GENDER } from '../../services/gql-api';\nimport { IoFilter } from \"react-icons/io5\"\nimport { AiOutlineEdit, AiFillDelete } from \"react-icons/ai\"\nimport Drawer from 'react-drag-drawer';\nimport SearchBar from \"material-ui-search-bar\";\n\n\nexport default function List() {\n    let [contacts, setContacts] = useState<Array<any>>([])\n    let [detail, setDetail] = useState(false);\n    let [filter, setFilter] = useState(false);\n    let [applyFilter, setApplyFilter] = useState(\"\");\n    let [search, setSearch] = useState(\"\");\n    let [listGender, setListGender] = useState([]);\n\n    let [id, setId] = useState(0);\n    let [firstName, setFirstName] = useState(\"\");\n    let [lastName, setLastName] = useState(\"\");\n    let [email, setEmail] = useState(\"\");\n    let [gender, setGender] = useState(\"\");\n    let [phoneNumber, setPhoneNumber] = useState(\"\");\n\n\n    const getUsers = useQuery(LOAD_USERS).data;\n    const [deleteUser] = useMutation(DELETE_USER);\n    const [updateUser] = useMutation(UPDATE_USER);\n    const [getUserById] = useMutation(GET_USER_BY_ID);\n    const [findUser] = useMutation(SEARCH_USER);\n    const getGenders = useQuery(GET_GENDERS).data as any;\n    const [filterGender] = useMutation(FILTER_GENDER);\n\n\n\n    useEffect(() => {\n        if (getUsers && getGenders) {\n            setContacts(getUsers.getAllUser);\n            setListGender(getGenders.getGenders);\n        }\n\n    }, [getUsers, getGenders]);\n\n    function updateFirstName(e: any) {\n        setFirstName(firstName = e.target.value)\n    }\n\n    function updateLastName(e: any) {\n        setLastName(lastName = e.target.value)\n    }\n\n    function updateEmail(e: any) {\n        setEmail(email = e.target.value)\n    }\n\n    function updateGender(e: any) {\n        setGender(gender = e.target.value)\n    }\n    function updatePhoneNumber(e: any) {\n        setPhoneNumber(phoneNumber = e.target.value)\n    }\n\n    function openDetailContact() {\n        if (detail === false) {\n            setDetail(true);\n        } else {\n            setDetail(false);\n        }\n\n        setId(0);\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n    }\n\n    function openFilter() {\n        if (filter === false) {\n            setFilter(true);\n        } else {\n            setFilter(false);\n        }\n    }\n\n    function searching(value: any) {\n        setSearch(value);\n        console.log(value);\n        if (value) {\n            findUser({\n                variables: {\n                    firstName: value\n                }\n            }).then(async response => {\n                var result = await response.data;\n                console.log(result);\n                setContacts(result.findUser)\n            })\n        } else {\n            setContacts(getUsers.getAllUser)\n            console.log('get all')\n        }\n    }\n\n    function contactDetails(id: any) {\n        openDetailContact();\n        getUserById({\n            variables: {\n                id: id\n            }\n        }).then((response) => {\n            if (response.data) {\n                let data = response.data;\n                setId(id = data.getUserById.id)\n                setFirstName(firstName = data.getUserById.firstName);\n                setLastName(lastName = data.getUserById.lastName);\n                setEmail(email = data.getUserById.email);\n                setGender(gender = data.getUserById.gender);\n                setPhoneNumber(phoneNumber = data.getUserById.phoneNumber);\n            }\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    function updateContact(id: any) {\n        updateUser({\n            variables: {\n                id: id,\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                gender: gender,\n                phoneNumber: phoneNumber,\n            }\n        }).then(response => {\n            openDetailContact();\n            setContacts(getUsers.getAllUser)\n        })\n        window.location.reload(false);\n    }\n\n    function deleteContact(id: any) {\n        deleteUser({\n            variables: {\n                id: id\n            }\n        }).then(response => {\n            openDetailContact();\n            setContacts(getUsers.getAllUser);\n        })\n        window.location.reload(false);\n    }\n\n    function apply() {\n        if (applyFilter != \"All\") {\n            filterGender({\n                variables: {\n                    gender: applyFilter\n                }\n            }).then(response => {\n                setContacts(response.data.filterGender);\n            })\n        } else {\n            setContacts(getUsers.getAllUser)\n        }\n        setFilter(false)\n\n    }\n\n\n    const detailDrawerChild = (\n        <div>\n            <p className='subtitle'>Contact Detail</p>\n            <Form.Group controlId=\"fistName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Contact First Name\" onChange={(e) => { updateFirstName(e) }} defaultValue={firstName} />\n            </Form.Group>\n\n            <Form.Group controlId=\"lastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Contact Last Name\" onChange={(e) => { updateLastName(e) }} defaultValue={lastName} />\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Email\" onChange={(e) => { updateEmail(e) }} defaultValue={email} />\n            </Form.Group>\n\n            <Form.Group controlId=\"gender\">\n                <Form.Label>Gender</Form.Label>\n                <Form.Control as=\"select\" placeholder=\"Gender\" onChange={(e) => { updateGender(e) }} defaultValue={gender}>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"phone\">\n                <Form.Label>Phone Number</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Phone Number\" onChange={(e) => { updatePhoneNumber(e) }} defaultValue={phoneNumber} />\n            </Form.Group>\n            <Button className=\"updateBtn\" onClick={() => updateContact(id)}>\n                <AiOutlineEdit style={{ marginBottom: \"4px\" }} />\n            </Button>\n            <Button className=\"deleteBtn\" onClick={() => deleteContact(id)}>\n                <AiFillDelete style={{ marginBottom: \"4px\" }}/>\n            </Button>\n        </div>\n    )\n\n    const filterDrawerChild = (\n        <div>\n            <p className='subtitle'>Filter Mode</p>\n            <Form.Check\n                key={0}\n                type=\"radio\"\n                className=\"radio-btn\"\n                label=\"All\"\n                name=\"formHorizontalRadios\"\n                id={\"formHorizontalRadios\"}\n                onClick={() => setApplyFilter(\"All\")}\n            />\n            {\n                listGender.map((data, index) => {\n                    return (\n                        <Form.Check\n                            key={index}\n                            type=\"radio\"\n                            className=\"radio-btn\"\n                            label={data}\n                            name=\"formHorizontalRadios\"\n                            id={\"formHorizontalRadios\" + index + 1}\n                            onClick={() => setApplyFilter(data)}\n                        />\n                    )\n                })\n            }\n            <Button className=\"apply-btn\" onClick={apply}>Apply</Button>\n        </div>\n    )\n\n    return (\n        <div className='list'>\n            <div className=\"body\">\n                <SearchBar\n                    className='searchbarCustom'\n                    value={search}\n                    onChange={(newValue) => searching(newValue)}\n                    onCancelSearch={() => searching(\"\")}\n                />\n                <div className=\"filter\">\n                    <p onClick={openFilter} className=\"filtertext\">Filter</p>\n                    <IoFilter size={16} />\n                </div>\n                <ListGroup>\n                    {contacts.map((res) => {\n                        return (\n                            <ListGroupItem key={res.id} onClick={() => contactDetails(res.id)}>\n                                <p className=\"item-p\">{res.firstName + ' ' + res.lastName}</p>\n                                <p className=\"item-p\">{res.email}</p>\n                            </ListGroupItem>\n                        )\n                    })}\n                </ListGroup>\n                <Drawer\n                    open={detail}\n                    onRequestClose={openDetailContact}\n                    modalElementClass='detailDrawer'\n                >\n                    {detailDrawerChild}\n                </Drawer>\n                <Drawer\n                    open={filter}\n                    onRequestClose={openFilter}\n                    modalElementClass='detailDrawer'\n                >\n                    {filterDrawerChild}\n                </Drawer>\n            </div>\n        </div>\n    )\n}\n\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './History'\n\n\n//Pages\nimport home from './pages/home/home'\nimport List from './pages/List/list';\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/\" exact component={home} />\n                    <Route path=\"/list\" exact component={List} />\n                </Switch>\n            </Router>\n        );\n    }\n}\n","\nimport { useState } from 'react'\nimport './navbar.scss'\nimport { Form, Button, Navbar, Container, Col, Row } from 'react-bootstrap';\nimport { Fab } from '@material-ui/core';\nimport { IoMdAdd } from 'react-icons/io';\nimport { IoCheckmark } from 'react-icons/io5';\nimport { FaHome, FaList } from 'react-icons/fa';\nimport Drawer from 'react-drag-drawer';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../services/gql-api';\nimport History from '../History';\n\n\nexport default function NavigationBar() {\n    let [add, setAdd] = useState(false);\n    let [firstName, setFirstName] = useState(\"\");\n    let [lastName, setLastName] = useState(\"\");\n    let [email, setEmail] = useState(\"\");\n    let [gender, setGender] = useState(\"\");\n    let [phoneNumber, setPhoneNumber] = useState(\"\");\n    let [nav, setNav] = useState(\"home\");\n\n    const [createUser] = useMutation(CREATE_USER);\n\n    function openAddContact() {\n        if (add === false) {\n            setAdd(true);\n        } else {\n            setAdd(false);\n        }\n    }\n\n    function addNewContact() {\n        createUser({\n            variables: {\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                gender: gender,\n                phoneNumber: phoneNumber\n            }\n        }).then(response => {\n            window.location.reload(false);\n        })\n\n        setFirstName(\"\");\n        setLastName(\"\");\n        setEmail(\"\");\n        setGender(\"\");\n        setPhoneNumber(\"\");\n\n        setAdd(false);\n    }\n\n    const addDrawerChild = (\n        <div>\n            <p className='subtitle'>Add New Contact</p>\n            <Form onSubmit={addNewContact}>\n                <Form.Group controlId=\"fistName\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Contact First Name\" onChange={(e) => { setFirstName(e.target.value) }} value={firstName} />\n                </Form.Group>\n\n                <Form.Group controlId=\"lastName\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Contact Last Name\" onChange={(e) => { setLastName(e.target.value) }} value={lastName} />\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value) }} value={email} />\n                </Form.Group>\n\n                <Form.Group controlId=\"gender\">\n                    <Form.Label>Gender</Form.Label>\n                    <Form.Control as=\"select\" placeholder=\"Gender\" onChange={(e) => { setGender(e.target.value); console.log(e.target.value) }} value={gender}>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"phone\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Phone Number\" onChange={(e) => { setPhoneNumber(e.target.value) }} value={phoneNumber} />\n                </Form.Group>\n\n                <Button className=\"btn-submit\" variant=\"primary\" type=\"submit\">\n                    <IoCheckmark style={{ marginBottom: \"2px\" }} />\n                </Button>\n            </Form>\n        </div>\n    )\n    return (\n        <div>\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"light\" fixed=\"bottom\">\n                <Container>\n                    <Row >\n                        <Col className=\"text-center\">\n                            <FaHome className={nav === 'home' ? 'activeNav' : ''} size={25} onClick={() => { setNav('home'); History.push('/') }} />\n                        </Col>\n                        <Col className=\"text-center\">\n                            <FaList className={nav === 'list' ? \"activeNav\" : \"\"} size={25} onClick={() => { setNav('list'); History.push('/list') }} />\n                        </Col>\n                    </Row>\n                </Container>\n            </Navbar>\n            <Fab className=\"fabStyles\" color={'primary'} onClick={openAddContact}>\n                <IoMdAdd size={20} />\n            </Fab>\n            <Drawer\n                open={add}\n                onRequestClose={openAddContact}\n                modalElementClass='addDrawer'\n            >\n                {addDrawerChild}\n            </Drawer>\n        </div>\n    )\n\n}\n\n","import './App.scss';\nimport Routes from './Routes';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\nimport { ApolloClient, InMemoryCache, HttpLink, from, ApolloProvider } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport NavigationBar from './components/navbar';\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message }) => {\n      return alert(`GraphQL error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://192.168.8.103:7000/myapi\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <Routes />\n          <NavigationBar></NavigationBar>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\ndeclare let window: any;\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\n\nif (window.cordova) {\n  document.addEventListener('deviceready', startApp, false);\n} else {\n  startApp();\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}